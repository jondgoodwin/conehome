imm glCOMPILE_STATUS = 0x8B81u
imm glVERTEX_SHADER = 0x8B31u
imm glFRAGMENT_SHADER = 0x8B30u
imm glLINK_STATUS = 0x8B82u
imm glARRAY_BUFFER = 0x8892u
imm glELEMENT_ARRAY_BUFFER = 0x8893u
imm glFLOAT = 0x1406u
imm glUNSIGNED_SHORT = 0x1403u
imm glSTATIC_DRAW = 0x88E4u
imm glTRIANGLES = 0x0004u

imm glCOLOR_BUFFER_BIT = 0x4000u
imm glDEPTH_BUFFER_BIT = 0x0100u

extern
	fn glCreateShader(type u32) u32
	// fn glDeleteShader(shader u32)
	fn glShaderSource(shader u32, src &[]u8)
	fn glCompileShader(shader u32)
	fn glGetShaderParameter(shader u32, flag u32) u32
	// fn glGetShaderInfoLog(shader u32) *u8

	fn glCreateProgram() u32
	fn glDeleteProgram(pgm u32)
	// fn glAttachShader(shaderpgm u32, shader u32)
	// fn glLinkProgram(shaderpgm u32)
	// fn glGetProgramParameter(shaderpgm u32, flag u32) u32
	fn glUseProgram(shaderpgm u32)
	fn glGetAttribLocation(pgm u32, name *u8, namesz u32) u32
	// fn glEnableVertexAttribArray(pgm u32)
	fn glGetUniformLocation(pgm u32, name *u8, namelen usize) u32
	fn glUniformMatrix4fv(loc u32, val *Mat4)
	fn glBindBuffer(target u32, buffer u32)
	fn glVertexAttribPointer(loc u32, size usize, type u32, norm Bool,stride u32,offset u32)
	fn glBufferData(target u32, arr *u8, arrsz usize, usage u32)
	fn glCreateBuffer() u32
	
	fn glClear(flags u32)
	fn glDrawArrays(mode u32, hmm u32, nitems usize)
	fn glDrawElements(mode u32, nitems usize, nbrtype u32, hmm u32)
	fn glGetAspectRatio() f32