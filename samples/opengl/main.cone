include window

extern system:
    fn glClearColor(r f32, g f32, b f32, a f32)
    fn glClear(bits u32)
imm GL_COLOR_BUFFER_BIT u32 = 0x00004000u

mut running = true;

struct Point:
  x f32
  y f32

  fn init() Point:
    Point[0., 0.]

fn stopWorld():
    running = false

fn loadWorld():
    glClearColor(0.0, 0.0, 0.0, 1.0)
    glClear(GL_COLOR_BUFFER_BIT)
    swapWindow() // SDL_GL_SwapWindow(mainWindow)

fn handleKey(k u32): // SDL_Keycode
    imm key = u8[k]
    if key == 27:  // escape
        stopWorld()
    elif key == 'r':
        glClearColor(1.0, 0.0, 0.0, 1.0)
        glClear(GL_COLOR_BUFFER_BIT)
        swapWindow()
    elif key == 'g':
        glClearColor(0.0, 1.0, 0.0, 1.0)
        glClear(GL_COLOR_BUFFER_BIT)
        swapWindow()
    elif key == 'b':
        glClearColor(0.0, 0.0, 1.0, 1.0)
        glClear(GL_COLOR_BUFFER_BIT)
        swapWindow()

fn mainWorld():
    mut pt = Point()
    imm dooby = Some[Point][pt]
    loadWorld()

    running = true
    while running:
        doEvent()
