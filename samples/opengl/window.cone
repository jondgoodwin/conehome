
extern fn print(str *u8)

extern system
    fn SDL_GetError() &u8
    fn SDL_ClearError()
    fn SDL_Init(flags u32) i32
    fn SDL_CreateWindow(title *u8, x i32, y i32, w i32, h i32, flags u32) &SDL_Window
    fn SDL_GL_CreateContext(window &SDL_Window) &SDL_GLContext
    fn SDL_GL_SetAttribute(attr i32, value i32) i32
    fn SDL_GL_SetSwapInterval(interval i32) i32
    fn SDL_GL_DeleteContext(context &SDL_GLContext)
    fn SDL_DestroyWindow(window &SDL_Window)
    fn SDL_Quit()
    fn SDL_GL_SwapWindow(window &SDL_Window)
    fn SDL_PollEvent(event &SDL_Event) i32

struct SDL_Window
    nothing u8

struct SDL_GLContext
    nothing u8

struct SDL_Event
    nothing u8

imm SDL_INIT_VIDEO = 0x20u32
imm SDL_WINDOW_OPENGL = 2
imm SDL_GL_DOUBLEBUFFER = 5
imm SDL_GL_CONTEXT_MAJOR_VERSION = 17 // SDL_GLattr
imm SDL_GL_CONTEXT_MINOR_VERSION = 18
imm SDL_GL_CONTEXT_PROFILE_MASK = 21
imm SDL_GL_CONTEXT_PROFILE_CORE = 1
imm SDL_QUIT = 256
imm SDL_KEYDOWN = 768

mut mainWindow &SDL_Window = null
mut mainContext &SDL_GLContext = null

fn CheckSDLError()
    imm error = SDL_GetError()
    if *error
        print("SDL Error: ")
        print(error)
        print("\n")
        SDL_ClearError();

fn init() Bool
    // Initialize SDL's video subsystem
    if SDL_Init(SDL_INIT_VIDEO) < 0
        print("Failed to initialize SDL\n")
        return false

    // Create our window centered at 512x512 resolution
    mainWindow = SDL_CreateWindow("OpenGL/SDL window", 0, 0, 512, 512, SDL_WINDOW_OPENGL);

    // Check that everything worked out okay
    if false // mainWindow == null
        print("Unable to create window\n")
        CheckSDLError()
        return false

    // Create our opengl context and attach it to our window
    mainContext = SDL_GL_CreateContext(mainWindow)

    // Set our OpenGL version.
    // SDL_GL_CONTEXT_CORE gives us only the newer version, deprecated functions are disabled
    SDL_GL_SetAttribute(SDL_GL_CONTEXT_PROFILE_MASK, SDL_GL_CONTEXT_PROFILE_CORE);

    // 3.2 is part of the modern versions of OpenGL, but most video cards whould be able to run it
    SDL_GL_SetAttribute(SDL_GL_CONTEXT_MAJOR_VERSION, 3);
    SDL_GL_SetAttribute(SDL_GL_CONTEXT_MINOR_VERSION, 2);

    // Turn on double buffering with a 24bit Z buffer.
    // You may need to change this to 16 or 32 for your system
    SDL_GL_SetAttribute(SDL_GL_DOUBLEBUFFER, 1);

    // This makes our buffer swap synchronized with the monitor's vertical refresh
    SDL_GL_SetSwapInterval(1);

    // Init GLEW
    // glewExperimental = GL_TRUE;
    // glewInit();

    true

fn cleanup()
    // Delete our OpengL context
    SDL_GL_DeleteContext(mainContext);

    // Destroy our window
    SDL_DestroyWindow(mainWindow);

    // Shutdown SDL 2
    SDL_Quit();

fn swapWindow()
    SDL_GL_SwapWindow(mainWindow)

fn doEvent()
    mut event SDL_Event
    while SDL_PollEvent(&event)
        if event.type == SDL_QUIT
            stopWorld()
        if (event.type == SDL_KEYDOWN)
            handleKey(event.key.keysym.sym)

fn main() i32
    if !init()
        return -1
    mainWorld()
    cleanup()
    0
